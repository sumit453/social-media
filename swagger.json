{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Social-Media API",
    "description": "Complete API documentation for Social Media Application",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "externalDocs": {
    "description": "Database Schema Reference",
    "url": "https://github.com/sumit453/social-media.git"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "JWT access token obtained from /signin"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "example": "507f1f77bcf86cd799439011" },
          "name": { "type": "string", "example": "John Doe" },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "profilepicture": {
            "type": "string",
            "example": "https://cdn.com/avatar.png"
          },
          "age": { "type": "integer", "example": 28 },
          "gender": { "type": "string", "example": "male" },
          "friends": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          },
          "friendRequestSend": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Friend" }
          },
          "friendRequestRecived": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Friend" }
          },
          "tokenVersion": { "type": "integer", "example": 0 }
        }
      },
      "Post": {
        "type": "object",
        "required": ["caption", "content"],
        "properties": {
          "_id": { "type": "string", "example": "507f1f77bcf86cd799439012" },
          "caption": { "type": "string", "example": "Beautiful sunset!" },
          "content": {
            "type": "string",
            "example": "Today's beach adventure..."
          },
          "imageUrl": {
            "type": "string",
            "example": "https://cdn.com/sunset.jpg"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2023-08-15T14:30:00Z"
          },
          "user": { "$ref": "#/components/schemas/SimpleUser" },
          "likes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Like" }
          },
          "comments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Comment" }
          }
        }
      },
      "Like": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "user": { "$ref": "#/components/schemas/SimpleUser" },
          "post": { "$ref": "#/components/schemas/Post" },
          "comment": { "$ref": "#/components/schemas/Comment" }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "comment": { "type": "string" },
          "user": { "$ref": "#/components/schemas/SimpleUser" },
          "post": { "$ref": "#/components/schemas/Post" },
          "likes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Like" }
          }
        }
      },
      "Friend": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "sender": { "$ref": "#/components/schemas/SimpleUser" },
          "senderEmail": { "type": "string" },
          "reciver": { "$ref": "#/components/schemas/SimpleUser" },
          "reciverEmail": { "type": "string" },
          "status": {
            "type": "string",
            "enum": ["pending", "accepted", "rejected"],
            "example": "pending"
          }
        }
      },
      "OTP": {
        "type": "object",
        "properties": {
          "userId": { "type": "string" },
          "userName": { "type": "string" },
          "otp": { "type": "integer" },
          "email": { "type": "string" },
          "expiredAt": { "type": "string", "format": "date-time" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "example": "Validation Error" },
          "message": { "type": "string", "example": "Invalid email format" },
          "details": { "type": "array", "items": { "type": "string" } }
        }
      },
      "SimpleUser": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "profilepicture": { "type": "string" }
        }
      }
    }
  },
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Register new user",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password", "age", "gender"],
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" },
                  "age": { "type": "integer" },
                  "gender": { "type": "string" },
                  "profilepicture": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["Users"],
        "summary": "Authenticate user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/users/get-details/{userId}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user details by ID",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/get-all-details": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "security": [{ "JWT": [] }],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/update-details/{userId}": {
      "put": {
        "tags": ["Users"],
        "summary": "Update user details",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "age": { "type": "integer" },
                  "gender": { "type": "string" },
                  "profilepicture": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "Logout current session",
        "security": [{ "JWT": [] }],
        "responses": {
          "200": {
            "description": "Logged out successfully"
          }
        }
      }
    },
    "/api/users/logout-all-devices": {
      "post": {
        "tags": ["Users"],
        "summary": "Logout all sessions",
        "security": [{ "JWT": [] }],
        "responses": {
          "200": {
            "description": "All sessions logged out"
          }
        }
      }
    },
    "/api/post": {
      "post": {
        "tags": ["Posts"],
        "summary": "Create new post",
        "security": [{ "JWT": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["caption", "content"],
                "properties": {
                  "caption": { "type": "string" },
                  "content": { "type": "string" },
                  "imageUrl": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Post" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Posts"],
        "summary": "Get all posts",
        "security": [{ "JWT": [] }],
        "responses": {
          "200": {
            "description": "List of posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Post" }
                }
              }
            }
          }
        }
      }
    },
    "/api/post/all": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get all posts of current user",
        "security": [{ "JWT": [] }],
        "responses": {
          "200": {
            "description": "User's posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Post" }
                }
              }
            }
          }
        }
      }
    },
    "/api/post/{postId}": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get single post by ID",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Post details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Post" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Posts"],
        "summary": "Delete post",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": {
            "description": "Post deleted"
          }
        }
      },
      "put": {
        "tags": ["Posts"],
        "summary": "Update post",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "caption": { "type": "string" },
                  "content": { "type": "string" },
                  "imageUrl": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Post" }
              }
            }
          }
        }
      }
    },
    "/api/post/filterpost": {
      "get": {
        "tags": ["Posts"],
        "summary": "Filter posts",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Post" }
                }
              }
            }
          }
        }
      }
    },
    "/api/likes/{id}": {
      "post": {
        "tags": ["Likes"],
        "summary": "Add like to post/comment",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Post ID or Comment ID",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Like added",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Like" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Likes"],
        "summary": "Get likes for post/comment",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Post ID or Comment ID",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of likes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Like" }
                }
              }
            }
          }
        }
      }
    },
    "/api/likes/{likeId}": {
      "delete": {
        "tags": ["Likes"],
        "summary": "Remove like",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "likeId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Like removed"
          }
        }
      }
    },
    "/api/comments/{postId}": {
      "post": {
        "tags": ["Comments"],
        "summary": "Add comment to post",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["comment"],
                "properties": {
                  "comment": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment added",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Comment" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Comments"],
        "summary": "Get comments for post",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Comment" }
                }
              }
            }
          }
        }
      }
    },
    "/api/comments/{commentId}": {
      "delete": {
        "tags": ["Comments"],
        "summary": "Delete comment",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted"
          }
        }
      },
      "put": {
        "tags": ["Comments"],
        "summary": "Update comment",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["comment"],
                "properties": {
                  "comment": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Comment" }
              }
            }
          }
        }
      }
    },
    "/api/otp/send": {
      "post": {
        "tags": ["OTP"],
        "summary": "Send password reset OTP",
        "security": [{ "JWT": [] }],
        "responses": {
          "200": {
            "description": "OTP sent successfully"
          }
        }
      }
    },
    "/api/otp/verify": {
      "post": {
        "tags": ["OTP"],
        "summary": "Verify reset password OTP",
        "security": [{ "JWT": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["otp"],
                "properties": {
                  "otp": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified"
          }
        }
      }
    },
    "/api/otp/forgotPassword": {
      "post": {
        "tags": ["OTP"],
        "summary": "Send forgot password OTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": { "type": "string", "format": "email" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent"
          }
        }
      }
    },
    "/api/otp/forgotPasswordApprove": {
      "post": {
        "tags": ["OTP"],
        "summary": "Verify forgot password OTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["otp", "newPassword"],
                "properties": {
                  "otp": { "type": "integer" },
                  "newPassword": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          }
        }
      }
    },
    "/api/friends/get-friends/{userId}": {
      "get": {
        "tags": ["Friends"],
        "summary": "Get user's friends",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of friends",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          }
        }
      }
    },
    "/api/friends/get-pending-requests": {
      "get": {
        "tags": ["Friends"],
        "summary": "Get pending friend requests",
        "security": [{ "JWT": [] }],
        "responses": {
          "200": {
            "description": "Pending requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Friend" }
                }
              }
            }
          }
        }
      }
    },
    "/api/friends/toggle-friendship/{friendId}": {
      "get": {
        "tags": ["Friends"],
        "summary": "Toggle friendship status",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "friendId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Friendship status updated"
          }
        }
      }
    },
    "/api/friends/response-to-request/{friendId}": {
      "post": {
        "tags": ["Friends"],
        "summary": "Respond to friend request",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "friendId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["accepted", "rejected"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request processed"
          }
        }
      }
    },
    "/api/friends/{reciverId}": {
      "post": {
        "tags": ["Friends"],
        "summary": "Send friend request",
        "security": [{ "JWT": [] }],
        "parameters": [
          {
            "name": "reciverId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Friend request sent"
          }
        }
      }
    }
  }
}
